task generateFiles(type:Copy, description: "Generate ale.bnd files for this host. This behaviour can be adjusted with environment variables (OS, ARCH, LIB, ...)", group: "build") {
	outputs.upToDateWhen { false }
	from projectDir
	into projectDir
	include "*.template"
	rename { file -> file.replace('.template', '') }
	expand(project.properties)
}
processResources.dependsOn(generateFiles)

task javah(type:Exec, description: "Generate jni header files used by native builds", group: "build", dependsOn: classes) {
	inputs.files compileJava
	def nativeIncludes = "$bnd.project.targetDir/jni-headers"
	outputs.dir nativeIncludes
	commandLine "javah", "-jni", "-d", nativeIncludes, "-classpath", bnd.project.buildpath.join(':'), "be.iminds.iot.dianne.rl.ale.ArcadeLearningEnvironment"
}
buildNative.dependsOn(javah)
jar.dependsOn(javah)